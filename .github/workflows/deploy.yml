# Workflow para construir y desplegar un sitio de Hugo en GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Ejecuta en los push hacia la rama principal
  push:
    branches:
      - main

  # Permite ejecutar este flujo de trabajo manualmente desde la pestaña Actions
  workflow_dispatch:

# Establece permisos para el GITHUB_TOKEN para permitir el despliegue en GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Permite solo un despliegue concurrente, omitiendo las ejecuciones en cola entre la ejecución en curso y la última en cola.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Por defecto a bash
defaults:
  run:
    shell: bash

jobs:
  # Trabajo de construcción
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.134.3  # Usa la versión 0.134.3, que es la misma que tienes en tu entorno local
    steps:
      - name: Install Hugo CLI (Extended Version)
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${{ env.HUGO_VERSION }}/hugo_extended_${{ env.HUGO_VERSION }}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
          
      - name: Verify Hugo Version
        run: hugo version

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          # Para la máxima compatibilidad hacia atrás con los módulos de Hugo
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --config config.production.toml \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: List built files
        run: ls -R ./public

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public

  # Trabajo de despliegue
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
